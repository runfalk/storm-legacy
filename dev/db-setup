#!/bin/bash -eu

PGHBA=/etc/postgresql/*/main/pg_hba.conf
PGCONF=/etc/postgresql/*/main/postgresql.conf
PGINIT=/etc/init.d/postgresql*

is_number() {
    test "$1" && printf '%f' "$1" >/dev/null;
}

# Restart service and examine output to attempt to adjust kernel tunables
restart_service() {
    sudo $PGINIT stop
    set +e
    output=$(sudo $PGINIT start 2>&1)
    rc=$?
    set -e
    if [ $rc -ne 0 ]; then
        size=$(echo $output | grep -E 'size=[0-9]+' | sed -r 's/.*size=([0-9]+).*/\1/')
        is_number $size
        SYSCTLCONF=/etc/sysctl.d/90-storm.conf
        sudo sh -c "echo kernel.shmmax = $size > $SYSCTLCONF"
        sudo sysctl -p $SYSCTLCONF
        sudo $PGINIT start
    fi
}

echo " * Fixing localhost access to postgres, restarting service"
sudo sed -i.bak -r 's/(host.*127\.0\.0\.1.*)\s+\w+$/\1 trust/' $PGHBA
sudo sed -i.bak -r 's/(host.*::1\/128.*)\s+\w+$/\1 trust/' $PGHBA
sudo sed -i.bak -r 's/(host.*::1\/128.*)\s+\w+$/\1 trust/' $PGHBA
sudo sed -i.bak -r 's/#(max_prepared_transactions.*)= 0/\1 = 200/' $PGCONF
restart_service

echo " * Create postgres superuser ($USER - will fail if existing)"
# If this fails, we will get errors later, so don't fail.
sudo -u postgres createuser --superuser $USER || /bin/true

echo " * Create DB Test Fixtures (will fail if existing)"
createdb storm_test || /bin/true

echo " * Testing DB Access for user:$USER"
pg_dump storm_test > /dev/null

echo " * All Done."
